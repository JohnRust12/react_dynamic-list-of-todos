{"version":3,"sources":["types/Filter.ts","components/TodoList/TodoList.tsx","components/TodoFilter/TodoFilter.tsx","api.ts","components/Loader/Loader.tsx","components/TodoModal/TodoModal.tsx","App.tsx","index.tsx"],"names":["Filter","TodoList","todos","checkedTodo","onCheckedTodo","className","map","todo","id","title","completed","classNames","type","onClick","TodoFilter","option","setOption","query","setQuery","onSubmit","e","preventDefault","value","onChange","target","Active","Completed","All","placeholder","event","style","pointerEvents","get","url","delay","fullURL","Promise","resolve","setTimeout","then","fetch","res","json","Loader","TodoModal","onClose","userId","useState","loading","setLoading","user","setUser","useEffect","getUser","data","href","email","name","App","setTodos","setCheckedTodo","filter","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.6a17b49e.chunk.js","sourcesContent":["export enum Filter {\n  All = 'all',\n  Active = 'active',\n  Completed = 'completed',\n}\n","import classNames from 'classnames';\nimport React from 'react';\nimport { Todo } from '../../types/Todo';\n\ntype Props = {\n  todos: Todo[];\n  checkedTodo: Todo | null;\n  onCheckedTodo: (todo: Todo) => void;\n};\n\nexport const TodoList: React.FC<Props> = ({\n  todos,\n  checkedTodo,\n  onCheckedTodo,\n}) => {\n  return (\n    <table className=\"table is-narrow is-fullwidth\">\n      <thead>\n        <tr>\n          <th>#</th>\n          <th>\n            <span className=\"icon\">\n              <i className=\"fas fa-check\" />\n            </span>\n          </th>\n          <th>Title</th>\n          <th> </th>\n        </tr>\n      </thead>\n\n      <tbody>\n        { todos.map(todo => {\n          const { id, title, completed } = todo;\n\n          return (\n            <tr\n              key={id}\n              data-cy=\"todo\"\n              className={\n                classNames({\n                  'has-background-info-light': checkedTodo?.id === id,\n                })\n              }\n            >\n              <td className=\"is-vcentered\">{id}</td>\n              <td className=\"is-vcentered\">\n                {completed && (\n                  <span className=\"icon\" data-cy=\"iconCompleted\">\n                    <i className=\"fas fa-check\" />\n                  </span>\n                )}\n              </td>\n              <td className=\"is-vcentered is-expanded\">\n                <p className={classNames({\n                  'has-text-success': completed,\n                  'has-text-danger': !completed,\n                })}\n                >\n                  {title}\n                </p>\n              </td>\n              <td className=\"has-text-right is-vcentered\">\n                <button\n                  data-cy=\"selectButton\"\n                  className=\"button\"\n                  type=\"button\"\n                  onClick={() => onCheckedTodo({ ...todo })}\n                >\n                  <span className=\"icon\">\n                    {\n                      checkedTodo?.id === id\n                        ? <i className=\"fa-eye-slash\" />\n                        : <i className=\"far fa-eye\" />\n                    }\n                  </span>\n                </button>\n              </td>\n            </tr>\n          );\n        })}\n      </tbody>\n    </table>\n  );\n};\n","import React from 'react';\nimport { Filter } from '../../types/Filter';\n\ntype Props = {\n  option: string;\n  setOption: (option: string) => void;\n  query: string;\n  setQuery: React.Dispatch<React.SetStateAction<string>>;\n};\n\nexport const TodoFilter: React.FC<Props> = ({\n  option,\n  setOption,\n  query,\n  setQuery,\n}) => {\n  const handleOptionValue = (e: React.ChangeEvent<HTMLSelectElement>) => {\n    switch (e.target.value) {\n      case 'active':\n        return setOption(Filter.Active);\n\n      case 'completed':\n        return setOption(Filter.Completed);\n\n      default:\n        return setOption(Filter.All);\n    }\n  };\n\n  return (\n    <form\n      className=\"field has-addons\"\n      onSubmit={(e) => e.preventDefault()}\n    >\n      <p className=\"control\">\n        <span className=\"select\">\n          <select\n            data-cy=\"statusSelect\"\n            value={option}\n            onChange={handleOptionValue}\n          >\n            <option value=\"all\">All</option>\n            <option value=\"active\">Active</option>\n            <option value=\"completed\">Completed</option>\n          </select>\n        </span>\n      </p>\n\n      <p className=\"control is-expanded has-icons-left has-icons-right\">\n        <input\n          data-cy=\"searchInput\"\n          type=\"text\"\n          className=\"input\"\n          placeholder=\"Search...\"\n          value={query}\n          onChange={event => setQuery(event.target.value)}\n        />\n        <span className=\"icon is-left\">\n          <i className=\"fas fa-magnifying-glass\" />\n        </span>\n\n        <span className=\"icon is-right\" style={{ pointerEvents: 'all' }}>\n          {query && (\n            <button\n              data-cy=\"clearSearchButton\"\n              type=\"button\"\n              className=\"delete\"\n              onClick={() => setQuery('')}\n            >\n              x\n            </button>\n          )}\n        </span>\n      </p>\n    </form>\n  );\n};\n","import { Todo } from './types/Todo';\nimport { User } from './types/User';\n\n// eslint-disable-next-line max-len\nconst BASE_URL = 'https://mate-academy.github.io/react_dynamic-list-of-todos/api';\n\nfunction wait(delay: number): Promise<void> {\n  return new Promise(resolve => {\n    setTimeout(resolve, delay);\n  });\n}\n\nfunction get<T>(url: string): Promise<T> {\n  // eslint-disable-next-line prefer-template\n  const fullURL = BASE_URL + url + '.json';\n\n  return wait(300)\n    .then(() => fetch(fullURL))\n    .then(res => res.json());\n}\n\nexport const getTodos = () => get<Todo[]>('/todos');\n\nexport const getUser = (userId: number) => get<User>(`/users/${userId}`);\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect, useState } from 'react';\nimport { getUser } from '../../api';\nimport { Todo } from '../../types/Todo';\nimport { User } from '../../types/User';\nimport { Loader } from '../Loader';\n\ntype Props = {\n  todo: Todo;\n  onClose: () => void;\n};\n\nexport const TodoModal: React.FC<Props> = ({ todo, onClose }) => {\n  const {\n    id,\n    userId,\n    completed,\n    title,\n  } = todo;\n\n  const [loading, setLoading] = useState(true);\n  const [user, setUser] = useState<User | null>(null);\n\n  useEffect(() => {\n    getUser(userId)\n      .then((data) => setUser(data))\n      .then(() => setLoading(false));\n  }, [userId]);\n\n  return (\n    <div className=\"modal is-active\" data-cy=\"modal\">\n      <div className=\"modal-background\" />\n\n      {loading ? (\n        <Loader />\n      ) : (\n        <div className=\"modal-card\">\n          <header className=\"modal-card-head\">\n            <div\n              className=\"modal-card-title has-text-weight-medium\"\n              data-cy=\"modal-header\"\n            >\n              {`Todo #${id}`}\n            </div>\n\n            {/* eslint-disable-next-line jsx-a11y/control-has-associated-label */}\n            <button\n              type=\"button\"\n              className=\"delete\"\n              data-cy=\"modal-close\"\n              onClick={onClose}\n            />\n          </header>\n\n          <div className=\"modal-card-body\">\n            <p className=\"block\" data-cy=\"modal-title\">\n              {title}\n            </p>\n\n            <p className=\"block\" data-cy=\"modal-user\">\n              {completed\n                ? <strong className=\"has-text-success\">Done</strong>\n                : <strong className=\"has-text-danger\">Planned</strong> }\n\n              {' by '}\n\n              {user && (\n                <a href={`mailto:${user?.email}`}>\n                  {user.name}\n                </a>\n              )}\n\n            </p>\n          </div>\n        </div>\n      )}\n    </div>\n  );\n};\n","/* eslint-disable max-len */\nimport React, { useEffect, useState } from 'react';\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { TodoList } from './components/TodoList';\nimport { TodoFilter } from './components/TodoFilter';\nimport { TodoModal } from './components/TodoModal';\nimport { Loader } from './components/Loader';\nimport { Filter } from './types/Filter';\nimport { getTodos } from './api';\nimport { Todo } from './types/Todo';\n\nexport const App: React.FC = () => {\n  const [loading, setLoading] = useState(true);\n  const [query, setQuery] = useState('');\n  const [option, setOption] = useState<string>(Filter.All);\n  const [todos, setTodos] = useState<Todo[]>([]);\n  const [checkedTodo, setCheckedTodo] = useState<Todo | null>(null);\n\n  useEffect(() => {\n    getTodos()\n      .then((data) => setTodos(data))\n      .then(() => setLoading(false));\n  }, []);\n\n  const filteredTodos = () => {\n    const queryTodo = todos.filter(todo => todo.title.toLowerCase().includes(query.toLowerCase()));\n\n    return queryTodo.filter(todo => {\n      switch (option) {\n        case Filter.Active:\n          return !todo.completed;\n\n        case Filter.Completed:\n          return todo.completed;\n\n        default:\n          return todo;\n      }\n    });\n  };\n\n  return (\n    <>\n      <div className=\"section\">\n        <div className=\"container\">\n          <div className=\"box\">\n            <h1 className=\"title\">Todos:</h1>\n\n            <div className=\"block\">\n              <TodoFilter\n                option={option}\n                setOption={setOption}\n                query={query}\n                setQuery={setQuery}\n              />\n            </div>\n\n            <div className=\"block\">\n              {loading && (<Loader />)}\n              <TodoList\n                todos={filteredTodos()}\n                checkedTodo={checkedTodo}\n                onCheckedTodo={setCheckedTodo}\n              />\n            </div>\n          </div>\n        </div>\n      </div>\n\n      {checkedTodo && (\n        <TodoModal\n          todo={checkedTodo}\n          onClose={() => setCheckedTodo(null)}\n        />\n      )}\n    </>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}